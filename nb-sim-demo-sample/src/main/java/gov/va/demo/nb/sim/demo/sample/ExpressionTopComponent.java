/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gov.va.demo.nb.sim.demo.sample;

import gov.va.demo.dom.DomExpressionAdapter;
import gov.va.demo.dom.DomTreeModelAdaptor;
import gov.va.demo.expression.ExpressionManager;
import gov.va.demo.nb.sim.jpa.Expressions;
import gov.va.demo.nb.sim.jpa.JpaManager;
import gov.va.demo.terminology.TerminologyService;
import java.beans.PropertyVetoException;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import gov.va.sim.impl.expression.Expression;
import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import javafx.application.Platform;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.swing.tree.DefaultTreeModel;
import org.w3c.dom.Document;
import org.xml.sax.SAXException;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//gov.va.demo.nb.sim.demo.sample//Expression//EN",
autostore = false)
@TopComponent.Description(preferredID = "ExpressionTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "gov.va.demo.nb.sim.demo.sample.ExpressionTopComponent")
@ActionReference(path = "Menu/Window" /*
 * , position = 333
 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_ExpressionAction",
preferredID = "ExpressionTopComponent")
@Messages({
    "CTL_ExpressionAction=Expression",
    "CTL_ExpressionTopComponent=Expression Window",
    "HINT_ExpressionTopComponent=This is an Expression window"
})
public final class ExpressionTopComponent extends TopComponent {

    private DomTreeModelAdaptor adaptor;
    private Expression expression;

    public ExpressionTopComponent() {
        initComponents();
        setName(Bundle.CTL_ExpressionTopComponent());
        setToolTipText(Bundle.HINT_ExpressionTopComponent());
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        expressionTree.setRootVisible(false);
        expressionTree.setShowsRootHandles(true);
        expressionTree.setModel(new DefaultTreeModel(null));
        DefaultTreeCellRenderer renderer = (DefaultTreeCellRenderer) expressionTree.getCellRenderer();
        renderer.setLeafIcon(null);
        renderer.setOpenIcon(null);
        renderer.setClosedIcon(null);

        Platform.runLater(new Runnable() {
            @Override
            public void run() {
                Group root = new Group();
                Scene s = new Scene(root, 300, 300, Color.BLACK);

                Rectangle r = new Rectangle(25,25,250,250);
                r.setFill(Color.BLUE);
                root.getChildren().add(r);
                jFXPanel1.setScene(s);
            }
       });
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
     * code. The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        processButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        expressionTree = new javax.swing.JTree();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        expressionTextArea = new javax.swing.JTextArea();
        checkExpressionTableButton = new javax.swing.JButton();
        checkElIndex = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        elConceptNid = new javax.swing.JTextField();
        expressionUuidTextField = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        elConceptUuid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addToExpressionTableButton = new javax.swing.JButton();
        jFXPanel1 = new javafx.embed.swing.JFXPanel();

        setBackground(javax.swing.UIManager.getDefaults().getColor("Tree.textBackground"));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(processButton, org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.processButton.text")); // NOI18N
        processButton.setActionCommand(org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.processButton.actionCommand")); // NOI18N
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeExpressionButtonActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(expressionTree);

        jScrollPane2.setViewportView(jScrollPane3);

        expressionTextArea.setColumns(20);
        expressionTextArea.setLineWrap(true);
        expressionTextArea.setRows(5);
        jScrollPane1.setViewportView(expressionTextArea);

        jScrollPane4.setViewportView(jScrollPane1);

        org.openide.awt.Mnemonics.setLocalizedText(checkExpressionTableButton, org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.checkExpressionTableButton.text")); // NOI18N
        checkExpressionTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkExpressionTableButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(checkElIndex, org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.checkElIndex.text")); // NOI18N
        checkElIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkElIndexActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.jLabel2.text")); // NOI18N

        elConceptNid.setEditable(false);
        elConceptNid.setText(org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.elConceptNid.text")); // NOI18N
        elConceptNid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elConceptNidActionPerformed(evt);
            }
        });

        expressionUuidTextField.setEditable(false);
        expressionUuidTextField.setText(org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.expressionUuidTextField.text")); // NOI18N
        expressionUuidTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expressionUuidTextFieldActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setText(org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.jTextField1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.jLabel3.text")); // NOI18N

        elConceptUuid.setEditable(false);
        elConceptUuid.setText(org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.elConceptUuid.text")); // NOI18N
        elConceptUuid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elConceptUuidActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(addToExpressionTableButton, org.openide.util.NbBundle.getMessage(ExpressionTopComponent.class, "ExpressionTopComponent.addToExpressionTableButton.text")); // NOI18N

        jFXPanel1.setBackground(new java.awt.Color(255, 255, 0));
        jFXPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jFXPanel1Layout = new javax.swing.GroupLayout(jFXPanel1);
        jFXPanel1.setLayout(jFXPanel1Layout);
        jFXPanel1Layout.setHorizontalGroup(
            jFXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );
        jFXPanel1Layout.setVerticalGroup(
            jFXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(elConceptNid)
                                    .addComponent(elConceptUuid)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(expressionUuidTextField))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkExpressionTableButton)
                                .addGap(18, 18, 18)
                                .addComponent(addToExpressionTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkElIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jFXPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 174, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(processButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jFXPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(expressionUuidTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkExpressionTableButton)
                    .addComponent(addToExpressionTableButton))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkElIndex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elConceptNid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(elConceptUuid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(154, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void makeExpressionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeExpressionButtonActionPerformed
        try {
            String expressionText = expressionTextArea.getText();
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document doc = builder.parse(new ByteArrayInputStream(expressionText.getBytes("UTF-8")));
            adaptor = new DomTreeModelAdaptor(doc);
            expressionTree.setModel(adaptor.getTreeModel());
            expression = DomExpressionAdapter.convertToExpression(doc);

            System.out.println("Expression: \n" + expression.getXml());
            System.out.println("Expression verbose: \n" + expression.getVerboseXml());
            System.out.println("Expression UUID: \n" + expression.getUuid().toString());
            System.out.println("Expression cnid: \n" + ExpressionManager.getCnid(expression));

            expressionUuidTextField.setText(expression.getUuid().toString());

        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        } catch (NoSuchAlgorithmException ex) {
            Exceptions.printStackTrace(ex);
        } catch (PropertyVetoException ex) {
            Exceptions.printStackTrace(ex);
        } catch (SAXException ex) {
            Exceptions.printStackTrace(ex);
        } catch (ParserConfigurationException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_makeExpressionButtonActionPerformed

    private void checkExpressionTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkExpressionTableButtonActionPerformed
        if (expression != null) {
            EntityManager em = JpaManager.getEntityManager();
            try {
                EntityTransaction entr = em.getTransaction();
                entr.begin();
                Expressions expressionObj = new Expressions();
                expressionObj.setCnid(ExpressionManager.getCnid(expression));
                expressionObj.setEuuid(expression.getUuid().toString());
                expressionObj.setExpression(expression.getXml());
                em.persist(expressionObj);
                entr.commit();
            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            } catch (NoSuchAlgorithmException ex) {
                Exceptions.printStackTrace(ex);
            } finally {
                em.close();
            }
        }

    }//GEN-LAST:event_checkExpressionTableButtonActionPerformed

    private void checkElIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkElIndexActionPerformed
        if (expression != null) {
            try {
                Integer cnid = ExpressionManager.getCnid(expression);
                elConceptNid.setText(cnid.toString());
                elConceptUuid.setText(ExpressionManager.getElConceptUuid(expression).toString());

            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            } catch (NoSuchAlgorithmException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_checkElIndexActionPerformed

    private void elConceptNidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elConceptNidActionPerformed
    }//GEN-LAST:event_elConceptNidActionPerformed

    private void expressionUuidTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expressionUuidTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expressionUuidTextFieldActionPerformed

    private void elConceptUuidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elConceptUuidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_elConceptUuidActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToExpressionTableButton;
    private javax.swing.JButton checkElIndex;
    private javax.swing.JButton checkExpressionTableButton;
    private javax.swing.JTextField elConceptNid;
    private javax.swing.JTextField elConceptUuid;
    private javax.swing.JTextArea expressionTextArea;
    private javax.swing.JTree expressionTree;
    private javax.swing.JTextField expressionUuidTextField;
    private javafx.embed.swing.JFXPanel jFXPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton processButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
