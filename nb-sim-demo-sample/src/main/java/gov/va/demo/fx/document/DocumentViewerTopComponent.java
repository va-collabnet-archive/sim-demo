/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gov.va.demo.fx.document;

import gov.va.demo.nb.sim.demo.sample.ExpressionTree;
import java.net.URL;
import javafx.application.Platform;
import javafx.embed.swing.JFXPanel;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//gov.va.demo.fx.document//DocumentViewer//EN",
autostore = false)
@TopComponent.Description(preferredID = "DocumentViewerTopComponent",
iconBase = "gov/va/demo/fx/document/documents-stack.png",
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "rightSlidingSide", openAtStartup = false)
@ActionID(category = "Window", id = "gov.va.demo.fx.document.DocumentViewerTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_DocumentViewerAction",
preferredID = "DocumentViewerTopComponent")
@Messages({
    "CTL_DocumentViewerAction=Document Viewer",
    "CTL_DocumentViewerTopComponent=Document Viewer Window",
    "HINT_DocumentViewerTopComponent=This is a Document Viewer window"
})
public final class DocumentViewerTopComponent extends TopComponent {

    public DocumentViewerTopComponent() {
        initComponents();
        setName(Bundle.CTL_DocumentViewerTopComponent());
        setToolTipText(Bundle.HINT_DocumentViewerTopComponent());

    } 

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
     * code. The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFxPanel = new gov.va.demo.fx.document.JavaFxPanel();

        setPreferredSize(new java.awt.Dimension(32767, 32767));

        javax.swing.GroupLayout jFxPanelLayout = new javax.swing.GroupLayout(jFxPanel);
        jFxPanel.setLayout(jFxPanelLayout);
        jFxPanelLayout.setHorizontalGroup(
            jFxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 476, Short.MAX_VALUE)
        );
        jFxPanelLayout.setVerticalGroup(
            jFxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 561, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFxPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFxPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gov.va.demo.fx.document.JavaFxPanel jFxPanel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        jFxPanel.getJFXPanel();
        Platform.runLater(new Runnable() {

            @Override
            public void run() {
                try {
                    URL resource = getClass().getResource("/gov/va/demo/fx/document/DocumentNodeFXML.fxml");
                    FXMLLoader loader = new FXMLLoader(resource);
                    Parent root = (Parent) loader.load();
                    DocumentNodeFXML controller = (DocumentNodeFXML) loader.getController();

                    Scene s = new Scene(root);
                    ((JFXPanel) jFxPanel.getJFXPanel()).setScene(s);
                } catch (Exception e) {
                    Exceptions.printStackTrace(e);
                }
            }
        });

    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
